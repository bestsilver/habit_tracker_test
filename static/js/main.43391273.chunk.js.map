{"version":3,"sources":["components/habit.jsx","components/habitAddForm.jsx","components/habits.jsx","components/navbar.jsx","app.jsx","index.js"],"names":["Habit","memo","props","habit","name","count","className","onClick","onIncrement","onDecrement","onDelete","HabitAddForm","inputRef","React","createRef","onSubmit","event","preventDefault","current","value","onAdd","type","placeholder","ref","Habits","handleIncrement","handleDecrement","handleDelete","handleAdd","this","habits","map","id","onReset","Component","Navbar","totalCount","App","useState","setHabits","useCallback","item","filter","handleReset","Date","now","Fragment","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43391273.chunk.js","sourcesContent":["// import React, { PureComponent } from 'react';\nimport React, { memo } from 'react';\n\nconst Habit = memo((props) => {\n    const handleIncrement = () => {\n        props.onIncrement(props.habit);\n    }\n    const handleDecrement = () => {\n        props.onDecrement(props.habit);\n    }\n    const handleDelete = () => {\n        props.onDelete(props.habit);\n    }\n\n    //habit안에 있는 동일한 이름을 써야함\n    const {name, count} = props.habit\n    return (\n        <li className=\"habit\">\n        <span className=\"habit-name\">{name}</span>\n        <span className=\"habit-count\">{count}</span>\n        <button className=\"habit-button habit-increase\" onClick={handleIncrement}>\n            <i className=\"fas fa-plus-square\"></i>\n        </button>\n        <button className=\"habit-button habit-decrease\" onClick={handleDecrement}>\n            <i className=\"fas fa-minus-square\"></i>\n        </button>\n        <button className=\"habit-button habit-delete\" onClick={handleDelete}>\n            <i className=\"fas fa-trash\"></i>\n        </button>\n        </li>\n    );\n}\n)\nexport default Habit;\n\n// class Habit extends PureComponent {\n\n//     handleIncrement = () => {\n//         this.props.onIncrement(this.props.habit);\n//     }\n//     handleDecrement = () => {\n//         this.props.onDecrement(this.props.habit);\n//     }\n//     handleDelete = () => {\n//         this.props.onDelete(this.props.habit);\n//     }\n//     render() {\n//         //habit안에 있는 동일한 이름을 써야함\n//         const {name, count} = this.props.habit\n//         return (\n//             <li className=\"habit\">\n//             <span className=\"habit-name\">{name}</span>\n//             <span className=\"habit-count\">{count}</span>\n//             <button className=\"habit-button habit-increase\" onClick={this.handleIncrement}>\n//                 <i className=\"fas fa-plus-square\"></i>\n//             </button>\n//             <button className=\"habit-button habit-decrease\" onClick={this.handleDecrement}>\n//                 <i className=\"fas fa-minus-square\"></i>\n//             </button>\n//             <button className=\"habit-button habit-delete\" onClick={this.handleDelete}>\n//                 <i className=\"fas fa-trash\"></i>\n//             </button>\n//             </li>\n//         );\n//     }\n// }\n// export default Habit;","import React, { memo } from 'react';\n\nconst HabitAddForm = memo((props) => {\n    const inputRef = React.createRef()\n    const onSubmit = event => {\n        event.preventDefault()\n        const name = inputRef.current.value\n        name && props.onAdd(name)\n        inputRef.current.value = \"\"\n    }\n\n    return (\n        //함수이기 때문에 this로 접근하지 않아도 된다.\n        <form className=\"add-form\" onSubmit={onSubmit}>\n            <input type=\"text\" className=\"add-input\" placeholder=\"Habit\" ref={inputRef}/>\n            <button className=\"add-button\">Add</button>\n        </form>\n    );\n})\n\nexport default HabitAddForm;","import React, { Component } from 'react';\nimport Habit from './habit';\nimport HabitAddForm from './habitAddForm';\n\nclass Habits extends Component {\n\n    handleIncrement = (habit) => {\n        this.props.onIncrement(habit)\n    }\n\n    handleDecrement = (habit) => {\n        this.props.onDecrement(habit)\n    }\n\n    handleDelete = (habit) => {\n        this.props.onDelete(habit)\n    //이런식으로 할 수도 있다.\n    //const habits = this.state.habits.filter(item => item.id !== habit.id)\n    }\n\n    handleAdd = (name) => {\n        this.props.onAdd(name)\n    }\n\n    render() {\n        return (\n            <div>\n                <HabitAddForm onAdd={this.handleAdd}></HabitAddForm>\n                <ul>\n                    {\n                        this.props.habits.map(habit => (\n                            <Habit habit={habit} key={habit.id}\n                            onIncrement={this.handleIncrement}\n                            onDecrement={this.handleDecrement}\n                            onDelete={this.handleDelete}\n                            ></Habit>\n                        ))\n                    }\n                </ul>\n                <button className=\"habits-reset\" onClick={this.props.onReset}>Reset All</button>\n            </div>\n\n        );\n    }\n}\n\nexport default Habits;","// import React, { PureComponent } from 'react';\nimport React from 'react';\n\nconst Navbar = (props) => {\n    return (\n        <>\n            <nav className=\"habit-nav\">\n                <i className=\"navbar-logo fas fa-apple-alt\"></i>\n                <span>Habit Tracker</span>\n                <span className=\"habit-nav-count\">{props.totalCount}</span>\n            </nav>\n        </>\n\n    );\n}\n\nexport default Navbar;\n\n// class Navbar extends PureComponent {\n//     render() {\n//         return (\n//             <>\n//                 <nav className=\"habit-nav\">\n//                     <i className=\"navbar-logo fas fa-apple-alt\"></i>\n//                     <span>Habit Tracker</span>\n//                     <span className=\"habit-nav-count\">{this.props.totalCount}</span>\n//                 </nav>\n//             </>\n\n//         );\n//     }\n// }\n\n// export default Navbar;","import './app.css';\nimport Habits from './components/habits';\nimport Navbar from './components/navbar';\n\n// import React, { Component,  } from 'react';\nimport React, { useCallback, useState } from 'react';\n\nconst App = (props) => { \n  const [habits, setHabits] = useState([\n    { id: 1, 'name': 'Reading', count: 0 },\n    { id: 2, 'name': 'Running', count: 0 },\n    { id: 3, 'name': 'Coding', count: 0 }\n])\n\n  const handleIncrement = useCallback((habit) => {\n    setHabits(habits =>\n      habits.map(item => {\n        if (item.id === habit.id) {\n          return { ...habit, count: habit.count + 1 };\n        }\n        return item;\n      })\n    );\n  }, [])\n\n  const handleDecrement = useCallback((habit) => {\n    setHabits(habits =>\n      habits.map(item => {\n        if (item.id === habit.id) {\n          const count = habit.count - 1;\n          return { ...habit, count: count < 0 ? 0 : count };\n        }\n        return item;\n      })\n    );\n  }, [])\n\n  const handleDelete = useCallback((habit) => {\n    setHabits(habits => habits.filter(item => item.id !== habit.id));\n    //이런식으로 할 수도 있다.\n    //const habits = habits.filter(item => item.id !== habit.id)\n  }, [])\n\n  const handleReset = useCallback(() => {\n    setHabits(habits =>\n      habits.map(habit => {\n        if (habit.count !== 0) {\n          return { ...habit, count: 0 };\n        }\n        return habit;\n      })\n    )\n  }, [])\n\n  const handleAdd = useCallback((name) => {\n    setHabits(habits => [...habits, { id: Date.now(), name, count: 0 }]);\n  }, [])\n\n  return (\n    <React.Fragment>\n      <Navbar totalCount={habits.filter(habit => habit.count > 0).length}></Navbar>\n      <Habits habits={habits}\n        onIncrement={handleIncrement}\n        onDecrement={handleDecrement}\n        onDelete={handleDelete}\n        onAdd={handleAdd}\n        onReset={handleReset}\n      >\n      </Habits>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n\n// class App extends Component {\n\n//   state = {\n//     habits: [\n//         { id: 1, 'name': 'Reading', count: 0 },\n//         { id: 2, 'name': 'Running', count: 0 },\n//         { id: 3, 'name': 'Coding', count: 0 }\n//     ]\n//   }\n\n\n//   //리액트에서는 state를 직접 수정하면 안된다. setState(this.state) <- X\n//   // state를 직접 수정하지 않는 이유가 리액트가 shallow comparison을 이용하기 때문이다.\n//   handleIncrement = (habit) => {\n//     // //직접적으로 배열의 state를 수정하면 좋지 않기 때문에 새로운 배열에 껍데기를 만든 것이다.\n//     // const habits = [...this.state.habits]\n//     // const index = habits.indexOf(habit)\n//     // //직접 수정하지 좋지 않은 코드인데 바로 수정했다..이것도 좋지 않은 코드이다.\n//     // habits[index].count++\n//     // this.setState({habits})\n\n//     const habits = this.state.habits.map(item => {\n//       if (item.id === habit.id) {\n//         // 기존 habit에 있는 모든 attribute를 기반으로 새로운 obj가 만들어진다. (deconstructing object)\n//         // 이후 count만 덮어쓰기\n//         return {...habit, count : habit.count + 1}\n//       }\n\n//       return item\n//     })\n\n//     this.setState({habits})\n//   }\n\n//   handleDecrement = (habit) => {\n//     // const habits = [...this.state.habits]\n//     // const index = habits.indexOf(habit)\n//     // habits[index].count - 1 <= 0 ? habits[index].count = 0 : habits[index].count--\n//     // this.setState({habits}) \n\n//     const habits = this.state.habits.map(item => {\n//       if (item.id === habit.id) {\n//         const count = item.count - 1\n//         return {...habit, count : count < 0 ? 0 : count}\n//       }\n//       return item\n//     })\n\n//     this.setState({habits})\n//   }\n\n//   handleDelete = (habit) => {\n//     const habits = [...this.state.habits]\n//     const index = habits.indexOf(habit)\n//     habits.splice(index, 1)\n//     this.setState({habits})\n//     //이런식으로 할 수도 있다.\n//     //const habits = this.state.habits.filter(item => item.id !== habit.id)\n//   }\n\n//   handleReset = () => {\n//     const habits = this.state.habits.map(habit => {\n//       if (habit.count !== 0) {\n//         return {...habit, count : 0}\n//       }\n//       return habit\n//     })\n\n//     this.setState({habits})\n//   }\n\n//   handleAdd = (name) => {\n//     const habits = [...this.state.habits, \n//       {id : Math.random(), count : 0, name}]\n//     this.setState({habits})\n//   }\n\n//   render() {\n//     return (\n//       <React.Fragment>\n//         <Navbar totalCount={this.state.habits.filter(habit => habit.count > 0).length}></Navbar>\n//         <Habits habits={this.state.habits}\n//           onIncrement={this.handleIncrement}\n//           onDecrement={this.handleDecrement}\n//           onDelete={this.handleDelete}\n//           onAdd={this.handleAdd}\n//           onReset={this.handleReset}\n//         >\n//         </Habits>\n//       </React.Fragment>\n//     );\n//   }\n// }\n\n// export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport '@fortawesome/fontawesome-free/js/all.js'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}